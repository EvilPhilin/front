{"version":3,"sources":["styles/mainPage.module.css","styles/frontClass.module.css","common/enumTypes.ts","addData.tsx","mainPage.tsx","frontClass.tsx","index.tsx","handlers/frontHandler.tsx","styles/addDataElement.module.css"],"names":["module","exports","idType","SendType","AddData","props","_childElements","_childElementsWithId","state","displayAdd","isWait","display","bind","checkData","Map","i","childProps","length","ref","React","createRef","push","type","none","set","className","styles","addDataElement","this","title","addDataButton","onClick","dataFields","map","element","inputType","errorMessage","subButton","disabled","setState","isAccept","current","notDisplayError","inputValue","displayError","disable","output","forEach","sendData","isIdAccepted","value","key","get","clearInput","stopWaiting","el","notDisable","data","typeOfData","customer","dataBaseContr","pushCustomer","id_customer","fname","lname","date_of_birth","location","order","pushOrder","id_order","date_of_order","date_of_delivery","delivery_type","model","pushModel","id_model","name","price","category","storage","pushCategory","id_category","Component","InputData","isError","isDisabled","handleChange","e","currentTarget","console","log","inputFields","inputInfo","errorMes","placeholder","inputField","style","borderColor","onChange","MainPage","mainPage","info","greeting","links","to","link","frontClass","_customerRef","_orderRef","_modelRef","_catRef","_dataBaseContr","ReactDOM","render","StrictMode","exact","path","component","addData","addDataElements","document","getElementById","result","idCheck","handler","_front","url","_checkedId","front","cust","JSON","stringify","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","res","response","json","checkCustomer","checkOrder","checkModel","cat","checkCategory","setTimeout","_","idChecked","setFront"],"mappings":"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","file":"static/js/main.7f0ae456.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"mainPage_mainPage__En_GD\",\"info\":\"mainPage_info__FRpAc\",\"greeting\":\"mainPage_greeting__2s-BI\",\"links\":\"mainPage_links__nl4sw\",\"link\":\"mainPage_link__3_XeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addData\":\"frontClass_addData__hulm4\",\"addDataElements\":\"frontClass_addDataElements__2WrJN\",\"link\":\"frontClass_link__3JhkH\"};","export enum idType {\r\n  customer = \"customer\",\r\n  order = \"order\",\r\n  model = \"model\",\r\n  category = \"category\",\r\n  none = \"none\",\r\n}\r\n\r\nexport enum SendType {\r\n  customer = \"customer\",\r\n  order = \"order\",\r\n  model = \"model\",\r\n  category = \"category\",\r\n}\r\n","/* eslint-disable no-mixed-operators */\r\n\r\n\r\nimport React, {Component,  RefObject} from 'react';\r\nimport { ICategory, ICustomer, IModel, IOrder } from './common/commonClasses';\r\nimport { IFrontHandler } from './common/commonInterfaces';\r\nimport { idType,  SendType } from './common/enumTypes';\r\nimport styles from './styles/addDataElement.module.css'\r\n\r\n// export interface InputPropsCallBack{\r\n//     title:string;\r\n//     inputType:string;\r\n//     errorMessage:string;\r\n//     inInputChange:(inputStr:string)=>void;\r\n// }\r\n\r\nexport interface InputProps{\r\n    title:string;\r\n    inputType:string;\r\n    errorMessage:string;\r\n    type:idType\r\n}\r\n\r\nexport interface InputState {\r\n    isError:boolean;\r\n    inputValue:string; \r\n    isDisabled:boolean;\r\n}\r\n\r\n\r\nexport interface AddDataProps {\r\n    childProps:Array<InputProps>;\r\n    title:string;   \r\n    dataBaseContr:IFrontHandler;\r\n    typeOfData:SendType;\r\n}\r\n\r\nexport interface AddDataState{\r\n    displayAdd:boolean;\r\n    isWait:boolean;\r\n}\r\n\r\nexport class AddData extends Component<AddDataProps,AddDataState>{\r\n\r\n    \r\n    private _childElements:Array<RefObject<InputData>>;\r\n    private _childElementsWithId:Map<idType,RefObject<InputData>>;\r\n\r\n    constructor(props:AddDataProps){\r\n        super(props)\r\n        this.state={displayAdd:false, isWait:false}\r\n        this.display=this.display.bind(this);\r\n        this.checkData=this.checkData.bind(this);\r\n        this._childElements=[];\r\n        this._childElementsWithId=new Map();\r\n        for (let i:number=0; i<this.props.childProps.length; ++i)\r\n        {\r\n            let ref=React.createRef<InputData>();\r\n            this._childElements.push(ref);\r\n            if (this.props.childProps[i].type!==idType.none)\r\n                this._childElementsWithId.set(this.props.childProps[i].type,ref);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n         \r\n    }\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <div className={styles.addDataElement}>\r\n            <h1>{this.props.title} </h1>\r\n            <button className={styles.addDataButton} onClick={this.display}>open fields</button>\r\n            {this.state.displayAdd?\r\n            <div className={styles.dataFields}>\r\n                {this.props.childProps.map((element:InputProps,i) => (      \r\n                <InputData title={element.title}\r\n                    inputType={element.inputType}\r\n                    errorMessage={element.errorMessage}\r\n                    type={element.type}\r\n                    ref={this._childElements[i]}\r\n                    key={element.title}\r\n                /> \r\n                ))}\r\n                <button className={`${styles.addDataButton} ${styles.subButton}`} onClick={this.checkData}\r\n                disabled={this.state.isWait?true:false}>submit</button>\r\n                {this.state.isWait?<p>waiting</p>:null}\r\n            </div>:\r\n            null}   \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    display():void {\r\n        this.setState({displayAdd:!this.state.displayAdd});\r\n    }\r\n    checkData():void{\r\n        let isAccept:boolean=true;\r\n        for (let i:number=0; i<this._childElements.length; ++i)\r\n        {\r\n            this._childElements[i].current?.notDisplayError();\r\n            if (this._childElements[i].current?.state.inputValue===\"\")\r\n            {\r\n                isAccept=false;\r\n                this._childElements[i].current?.displayError();\r\n            }\r\n            else\r\n                this._childElements[i].current?.notDisplayError();\r\n        }\r\n        if (isAccept)\r\n        {\r\n            for (let i=0;i<this._childElements.length; ++i)\r\n                this._childElements[i].current?.disable();\r\n            this.setState({isWait:true});\r\n            let output=new Map<string,string>();\r\n            this._childElements.forEach((element)=>{\r\n                output.set( element.current?.props.title || \"\",element.current?.state.inputValue || \"\");\r\n            }) \r\n            this.sendData(output);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    idCheck(isIdAccepted:Map<idType,boolean>):void{\r\n        let isAccept:boolean=true;\r\n        isIdAccepted.forEach((value,key)=>{\r\n            if (value===false)\r\n            {\r\n                isAccept=false;\r\n                this._childElementsWithId.get(key)?.current?.displayError();\r\n            }\r\n        })\r\n        if (isAccept)\r\n            this._childElements.forEach((element)=>{\r\n                element.current?.clearInput();\r\n            });\r\n        this.stopWaiting();\r\n    }\r\n\r\n    stopWaiting():void{\r\n        this._childElements.forEach((el)=>{\r\n            el.current?.notDisable();\r\n        })\r\n        this.setState({isWait:false});\r\n    }\r\n\r\n    private sendData(data:Map<string,string>):void{\r\n        switch(this.props.typeOfData){\r\n            case SendType.customer:\r\n                this.props.dataBaseContr.pushCustomer({id_customer:\r\n                    +(data.get(\"ID\") || 0),\r\n                    fname:(data.get(\"First Name\") || \"\"), lname:(data.get(\"Last Name\") || \"\"), \r\n                    date_of_birth:(data.get(\"Date of Birth\") || \"\"),location:(data.get(\"Location\") || \"\")\r\n                });\r\n                break;\r\n            case SendType.order:\r\n                this.props.dataBaseContr.pushOrder({id_order:\r\n                    +(data.get(\"ID\") || 0),\r\n                    customer:+(data.get(\"Customer\") || 0), type:+(data.get(\"Model\") || 0), \r\n                    date_of_order:(data.get(\"Order Date\") || \"\"),\r\n                    date_of_delivery:(data.get(\"Delivery Date\") || \"\"),\r\n                    delivery_type:(data.get(\"Delivery\") || \"\"),\r\n                    });\r\n                  break;\r\n            case SendType.model:\r\n                this.props.dataBaseContr.pushModel({id_model:+(data.get(\"ID\") || 0),\r\n                name:(data.get(\"Name\") || \"\"),price:+(data.get(\"Price\") || 0),category:+(data.get(\"Category\") || 0),\r\n                storage:+(data.get(\"Storage\") || 0)\r\n                });\r\n                break;\r\n            case SendType.category:\r\n                this.props.dataBaseContr.pushCategory({id_category:+(data.get(\"ID\") || 0),\r\n                name:(data.get(\"Name\") || \"\")\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n \r\nexport class InputData extends Component<InputProps,InputState>{\r\n\r\n    \r\n    constructor(props:InputProps,state:InputState){\r\n        super(props)\r\n        this.state=state;\r\n        this.state={isError:false,inputValue:\"\",isDisabled:false};\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.displayError=this.displayError.bind(this);\r\n        this.notDisplayError=this.notDisplayError.bind(this);\r\n        this.clearInput=this.clearInput.bind(this);\r\n    }\r\n\r\n    handleChange(e:React.FormEvent<HTMLInputElement>):void{\r\n        this.setState({inputValue:e.currentTarget.value})\r\n        //this.props.onInputChange(e.currentTarget.value);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.displayError=this.displayError.bind(this);\r\n        this.notDisplayError=this.notDisplayError.bind(this);\r\n        this.clearInput=this.clearInput.bind(this);\r\n        console.log(\"component was mounted\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={styles.inputFields}>\r\n            <div className={styles.inputInfo}>\r\n                <h2>{this.props.title}</h2>\r\n                {this.state.isError?<h2 className={styles.errorMes}>{this.props.errorMessage}</h2>:null}\r\n            </div>\r\n            <input  placeholder={\"get \"+this.props.title} type={this.props.inputType} value={this.state.inputValue}\r\n                disabled={this.state.isDisabled?true: false}    \r\n                className={`${styles.inputField}`} style={{borderColor:this.state.isError?'red':'black'}}\r\n                onChange={this.handleChange}/>\r\n            </div>)\r\n    }\r\n    displayError():void{\r\n       this.setState({isError:true}); \r\n    }\r\n    notDisplayError():void{\r\n        this.setState({isError:false});\r\n    }\r\n    clearInput():void{\r\n        this.setState({inputValue:\"\"});\r\n    }\r\n    disable():void{\r\n        this.setState({isDisabled:true});\r\n    }\r\n    notDisable():void{\r\n        this.setState({isDisabled:false});\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './styles/mainPage.module.css'\r\n\r\n\r\n\r\nexport class MainPage extends Component{\r\n    render(){\r\n    return(\r\n        <section className={styles.mainPage}>\r\n            <section className={styles.info}>\r\n                <h3 className={`${styles.greeting}`}>Welcome to the mus store database</h3>\r\n                <small>What do you want to do?</small>\r\n                <div className={styles.links}>\r\n                <Link to=\"/inputData\" className={styles.link}>Add some data</Link>\r\n                <Link to=\"/outputData\" className={styles.link}>Find some data</Link>\r\n                </div>\r\n            </section>\r\n        </section>)\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { RefObject } from 'react';\r\nimport { createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {AddData} from './addData';\r\nimport { MainPage } from './mainPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { IFrontHandler } from './common/commonInterfaces';\r\nimport { idType, SendType } from './common/enumTypes';\r\nimport styles from './styles/frontClass.module.css';\r\n\r\n\r\nexport class frontClass  {\r\n\r\n    private _customerRef:RefObject<AddData>;\r\n    private _orderRef:RefObject<AddData>;\r\n    private _modelRef:RefObject<AddData>;\r\n    private _catRef:RefObject<AddData>;\r\n    private _dataBaseContr:IFrontHandler;\r\n\r\n    constructor(dataBaseContr:IFrontHandler)\r\n    {\r\n        this._dataBaseContr=dataBaseContr;\r\n        this._customerRef=createRef<AddData>();\r\n        this._orderRef=createRef<AddData>();\r\n        this._modelRef=createRef<AddData>();\r\n        this._catRef=createRef<AddData>();\r\n    }\r\n    render():void{  \r\n      ReactDOM.render(\r\n        <React.StrictMode>\r\n          <Router>\r\n            <Route exact path=\"/\" component={MainPage}/>\r\n            <Route exact path=\"/inputData\" render={()=> (\r\n            <div className={styles.addData}>\r\n              <div className={styles.addDataElements}>\r\n              <AddData title={\"Add Customer\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.customer},\r\n                {title:\"First Name\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Last Name\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Date of Birth\",inputType:\"date\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Location\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none}]\r\n              }  \r\n              dataBaseContr={this._dataBaseContr}  typeOfData={SendType.customer}\r\n              ref={this._customerRef}\r\n              />\r\n            <AddData title={\"Add Order\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.order},\r\n                {title:\"Customer\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.customer},\r\n                {title:\"Model\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.model},\r\n                {title:\"Order Date\",inputType:\"date\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Delivery Date\",inputType:\"date\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Delivery\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.order}\r\n                ref={this._orderRef}\r\n                />\r\n              <AddData title={\"Add Model\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.model},\r\n                {title:\"Name\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Price\",inputType:\"number\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Category\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.category},\r\n                {title:\"storage\",inputType:\"number\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.model}\r\n                ref={this._modelRef}\r\n              /> \r\n              <AddData title={\"Add Category\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"id exists/empty\",type:idType.category},\r\n                {title:\"Name\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.category}\r\n                ref={this._catRef}\r\n              />  \r\n              </div>\r\n              <Link to=\"/\" className={styles.link}>return to main page</Link>\r\n              </div>\r\n            )}/>\r\n            <Route exact path=\"/outputData\" render={()=>(\r\n              <div>\r\n                <h1>output data</h1>\r\n                <Link to=\"/\">return to main page</Link>\r\n              </div>\r\n            )}/>\r\n         </Router>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n      );\r\n    }\r\n    idCheck(result:Map<idType,boolean>, type:SendType):void{\r\n      switch(type){\r\n        case SendType.customer:\r\n          this._customerRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.order:\r\n          this._orderRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.model:\r\n          this._modelRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.category:\r\n          this._catRef.current?.idCheck(result);\r\n          break;\r\n      }\r\n    }\r\n    \r\n    // updateIdOfCustomers(data:Set<number>):void{\r\n    //     this._customerRef.current?.updateExist(0,data);\r\n    //     this._orderRef.current?.updateExist(1,data);\r\n    //     console.log(\"updateIdOfCustomers was called\");\r\n    // }\r\n    // updateIdOfOrders(data:Set<number>):void{\r\n    //     this._orderRef.current?.updateExist(0,data);\r\n    //     console.log(\"updateIdOfOrders was called\");\r\n    // }\r\n\r\n    // updateIdOfModels(data: Set<number>): void{\r\n    //   this._orderRef.current?.updateExist(2,data);\r\n    //   this._modelRef.current?.updateExist(0,data);\r\n    //   console.log(\"updateIdOfModels was called\");\r\n    // }\r\n    // updateIdOfCategories(data:Set<number>):void{\r\n    //   this._modelRef.current?.updateExist(3,data);\r\n    //   this._catRef.current?.updateExist(0,data);\r\n    // }\r\n    \r\n  }\r\n\r\n","import {frontClass} from './frontClass';\nimport { FrontHandler } from './handlers/frontHandler';\n\n\n\n\n\n\n\nlet handler=new FrontHandler();\nlet front=new frontClass(handler);\nhandler.setFront(front);\n\nfront.render();\n\n","import { ICustomer, IOrder, IModel, ICategory } from \"../common/commonClasses\";\r\nimport { IFrontHandler } from \"../common/commonInterfaces\";\r\nimport { idType, SendType } from \"../common/enumTypes\";\r\nimport { frontClass } from \"../frontClass\";\r\n\r\n\r\n\r\nexport class FrontHandler implements IFrontHandler{\r\n\r\n    private _front?:frontClass;\r\n    readonly url=\"https://mus-market.herokuapp.com/func\";\r\n    private _checkedId: Map<idType, boolean>; //поле для отладки\r\n    \r\n    constructor(){\r\n        this._checkedId=new Map<idType,boolean>();\r\n    }\r\n\r\n    setFront(front:frontClass){\r\n        this._front=front;\r\n    }\r\n\r\n    //функции, вызываемые при отправке данных\r\n    pushCustomer(cust: ICustomer): void {\r\n        console.log(JSON.stringify(cust));\r\n        const xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( \"GET\", '/func', false );\r\n        xmlHttp.setRequestHeader('command', `add_customer`);\r\n        xmlHttp.setRequestHeader('arg1', `${cust.id_customer}`);\r\n        xmlHttp.setRequestHeader('arg2',`${cust.fname}`);\r\n        xmlHttp.setRequestHeader('arg3',`${cust.lname}`);\r\n        xmlHttp.setRequestHeader('arg4',`${cust.fname}`);\r\n        xmlHttp.setRequestHeader('arg5',`${cust.location}`);\r\n        xmlHttp.send( null );\r\n        let res=xmlHttp.response.json();\r\n        for (let value in res){\r\n            console.log(value);\r\n        }\r\n        this.checkCustomer(cust);\r\n    }\r\n    pushOrder(order: IOrder): void {\r\n        this.checkOrder(order);\r\n    }\r\n    pushModel(model: IModel): void {\r\n        this.checkModel(model);\r\n    }\r\n    pushCategory(cat: ICategory): void {\r\n        this.checkCategory(cat);\r\n    }\r\n    //вызывакется при получении данных\r\n    idChecked(data: Map<idType, boolean>, type: SendType): void {\r\n        this._front?.idCheck(data,type);\r\n    }\r\n\r\n    // функции для отладки\r\n    private checkCustomer(cust:ICustomer):void{\r\n        this._checkedId=new Map<idType,boolean>();\r\n        if (cust.id_customer===1234)\r\n            this._checkedId.set(idType.customer,false);\r\n        else\r\n            this._checkedId.set(idType.customer,true);\r\n        setTimeout(_=>{ this.idChecked(this._checkedId,SendType.customer);  },3000);   \r\n    }\r\n\r\n\r\n    private checkOrder(order:IOrder):void{\r\n        this._checkedId=new Map<idType,boolean>();\r\n        if (order.id_order===1234)\r\n            this._checkedId.set(idType.order,false);\r\n        else \r\n            this._checkedId.set(idType.order,true);\r\n        if (order.type===1234)\r\n            this._checkedId.set(idType.model,false);\r\n        else \r\n            this._checkedId.set(idType.model,true);\r\n        if (order.customer===1234)\r\n            this._checkedId.set(idType.customer,false);\r\n        else \r\n            this._checkedId.set(idType.customer,true);\r\n        console.log(order.date_of_order);\r\n        setTimeout(_=>{this.idChecked(this._checkedId,SendType.order);},3000);    \r\n    }\r\n\r\n\r\n    private checkModel(model:IModel):void{\r\n        this._checkedId=new Map<idType,boolean>();\r\n        if (model.id_model===1234)\r\n            this._checkedId.set(idType.model,false);\r\n        else\r\n            this._checkedId.set(idType.model,true);\r\n        if (model.id_model===1234)\r\n            this._checkedId.set(idType.category,false);\r\n        else\r\n            this._checkedId.set(idType.category,true);  \r\n        setTimeout(_=>{this.idChecked(this._checkedId,SendType.model); },3000);  \r\n    }\r\n    private checkCategory(cat:ICategory):void{\r\n        this._checkedId=new Map<idType,boolean>();\r\n        if (cat.id_category===1234)\r\n            this._checkedId.set(idType.category,false);\r\n        else\r\n            this._checkedId.set(idType.category,true);\r\n        setTimeout(_=>{this.idChecked(this._checkedId,SendType.category);},3000);      \r\n    }\r\n\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addDataElement\":\"addDataElement_addDataElement__12nZr\",\"addDataButton\":\"addDataElement_addDataButton__3U4_9\",\"subButton\":\"addDataElement_subButton__3Cbeq\",\"dataFields\":\"addDataElement_dataFields__3Vwlk\",\"inputFields\":\"addDataElement_inputFields__21qd5\",\"inputInfo\":\"addDataElement_inputInfo__48VPm\",\"errorMes\":\"addDataElement_errorMes__3F9ed\",\"inputField\":\"addDataElement_inputField__OzLqn\"};"],"sourceRoot":""}